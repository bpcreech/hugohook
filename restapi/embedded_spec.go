// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "hugohook",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "host": "user.implemented.local",
  "paths": {
    "/": {
      "post": {
        "description": "Handle an event",
        "operationId": "handleEvent",
        "parameters": [
          {
            "enum": [
              "push",
              "ping"
            ],
            "type": "string",
            "name": "X-GitHub-Event",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-GitHub-Delivery",
            "in": "header"
          },
          {
            "maxLength": 45,
            "minLength": 45,
            "type": "string",
            "name": "X-Hub-Signature",
            "in": "header"
          },
          {
            "name": "event",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "okay status"
          },
          "401": {
            "description": "bad secret key"
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Commit": {
      "type": "object",
      "properties": {
        "author": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "distinct": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "Commits": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Commit"
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "before": {
          "type": "string"
        },
        "commits": {
          "$ref": "#/definitions/Commits"
        },
        "distinct_size": {
          "type": "integer"
        },
        "head": {
          "type": "string"
        },
        "hook": {
          "$ref": "#/definitions/HookConfig"
        },
        "hook_id": {
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "ref": {
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "size": {
          "type": "integer"
        },
        "zen": {
          "type": "string"
        }
      }
    },
    "HookConfig": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "config": {
          "$ref": "#/definitions/HookConfigUrl"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "events": {
          "type": "array",
          "items": [
            {
              "type": "string"
            }
          ]
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "ping_url": {
          "type": "string",
          "format": "url"
        },
        "test_url": {
          "type": "string",
          "format": "url"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "HookConfigUrl": {
      "type": "object",
      "properties": {
        "content_type": {
          "type": "string",
          "enum": [
            "json",
            "form"
          ]
        },
        "insecure_ssl": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "login": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "Repository": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "fork": {
          "type": "boolean"
        },
        "full_name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/User"
        },
        "private": {
          "type": "boolean"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "login": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "hugohook",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "host": "user.implemented.local",
  "paths": {
    "/": {
      "post": {
        "description": "Handle an event",
        "operationId": "handleEvent",
        "parameters": [
          {
            "enum": [
              "push",
              "ping"
            ],
            "type": "string",
            "name": "X-GitHub-Event",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-GitHub-Delivery",
            "in": "header"
          },
          {
            "maxLength": 45,
            "minLength": 45,
            "type": "string",
            "name": "X-Hub-Signature",
            "in": "header"
          },
          {
            "name": "event",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "okay status"
          },
          "401": {
            "description": "bad secret key"
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Commit": {
      "type": "object",
      "properties": {
        "author": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "distinct": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "Commits": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Commit"
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "before": {
          "type": "string"
        },
        "commits": {
          "$ref": "#/definitions/Commits"
        },
        "distinct_size": {
          "type": "integer"
        },
        "head": {
          "type": "string"
        },
        "hook": {
          "$ref": "#/definitions/HookConfig"
        },
        "hook_id": {
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "ref": {
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "sender": {
          "$ref": "#/definitions/User"
        },
        "size": {
          "type": "integer"
        },
        "zen": {
          "type": "string"
        }
      }
    },
    "HookConfig": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "config": {
          "$ref": "#/definitions/HookConfigUrl"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "events": {
          "type": "array",
          "items": [
            {
              "type": "string"
            }
          ]
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "ping_url": {
          "type": "string",
          "format": "url"
        },
        "test_url": {
          "type": "string",
          "format": "url"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "HookConfigUrl": {
      "type": "object",
      "properties": {
        "content_type": {
          "type": "string",
          "enum": [
            "json",
            "form"
          ]
        },
        "insecure_ssl": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "login": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "Repository": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "fork": {
          "type": "boolean"
        },
        "full_name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/User"
        },
        "private": {
          "type": "boolean"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "login": {
          "type": "string"
        }
      }
    }
  }
}`))
}
